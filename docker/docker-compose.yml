version: '2.1'

services:
  course:
    build: ../microservices/course-service
    image: javatab/course_service:v1
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      mongodb:
        condition: service_healthy

  search:
    build: ../microservices/search-service
    image: javatab/search_service:v1
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      elasticsearch:
        condition: service_healthy

  student:
    build: ../microservices/student-service
    image: javatab/student_service:v1
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      postgres:
        condition: service_healthy

  vote:
    build: ../microservices/vote-service
    image: javatab/vote_service:v1
    mem_limit: 512m
    environment:
      - SPRING_PROFILES_ACTIVE=docker
    depends_on:
      redis:
        condition: service_healthy

  course-composite:
    build: ../microservices/course-composite-service
    image: javatab/course_composite_service:v1
    mem_limit: 512m
    ports:
      - "8080:8080" # Only this service will be exposed to outside containers so no port binding for above images
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  mongodb:
    image: mongo:4.4.2
    mem_limit: 512m
    ports:
      - "27017:27017"
    command: mongod
    healthcheck:
      test: "mongo --eval 'db.stats().ok'"
      interval: 5s
      timeout: 2s
      retries: 60

  postgres:
    image: postgres:alpine3.15
    mem_limit: 512m
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DATABASE=test
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=pwd
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user" ]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:6.2.6-alpine
    restart: always
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 5s
      timeout: 2s
      retries: 60

  elasticsearch:
    image: elasticsearch:7.12.1
    ports:
      - "9300:9300"
      - "9200:9200"
    environment:
      - node.name=elasticsearch
      - discovery.type=single-node
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 60

  eureka:
    build: ../spring-cloud/eureka-server
    mem_limit: 512m
    ports:
      - "8761:8761"